<UserControl x:Class="BeatManager.UserControls.BeatmapOnlineDetailsUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:converters="clr-namespace:BeatManager.Converters"
             xmlns:st="http://schemas.spicytaco.io/"
             mc:Ignorable="d"
             d:DesignWidth="800"
             d:DesignHeight="1088">
    <UserControl.Resources>
        <converters:ImageSourceToBitmapConverter x:Key="ImageSourceToBitmapConverter" />
        <converters:BooleanToVisiblityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
        <converters:DateTimeConverter x:Key="DateTimeConverter" />
        <converters:FloatToPercentageConverter x:Key="FloatToPercentageConverter" />
        <converters:AddCommasConverter x:Key="AddCommasConverter" />
        <converters:TimeSpanToStringConverter x:Key="TimeSpanToStringConverter" />
        <converters:InverseNullToVisibilityConverter x:Key="InverseNullToVisibilityConverter" />
        <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />

        <Style TargetType="TextBox"
               BasedOn="{StaticResource MahApps.Styles.TextBox}">
            <Setter Property="IsReadOnly"
                    Value="True" />
            <Setter Property="Background"
                    Value="{x:Null}" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="FontSize"
                    Value="15" />
            <Setter Property="HorizontalAlignment"
                    Value="Left" />
        </Style>
        <Style TargetType="Label"
               BasedOn="{StaticResource MahApps.Styles.Label}">
            <Setter Property="FontSize"
                    Value="15" />
        </Style>
        <Style TargetType="Button"
               BasedOn="{StaticResource MahApps.Styles.Button.Circle}">
            <Setter Property="ToolTipService.BetweenShowDelay"
                    Value="0" />
            <Setter Property="ToolTipService.InitialShowDelay"
                    Value="0" />
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="Cursor"
                    Value="Hand" />
        </Style>

        <Style x:Key="ToggleButtonDifficultySet"
               TargetType="ToggleButton"
               BasedOn="{StaticResource MahApps.Styles.ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                ToolTip="{TemplateBinding ToolTip}"
                                Padding="4"
                                BorderThickness="0">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
            <Setter Property="FontSize"
                    Value="14" />
            <Setter Property="FontWeight"
                    Value="Regular" />
            <Setter Property="Cursor"
                    Value="Hand" />
            <Setter Property="ToolTipService.BetweenShowDelay"
                    Value="0" />
            <Setter Property="ToolTipService.InitialShowDelay"
                    Value="0" />

            <Style.Triggers>
                <Trigger Property="IsChecked"
                         Value="True">
                    <Setter Property="Foreground"
                            Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ToggleButtonDifficultyEasy"
               TargetType="ToggleButton"
               BasedOn="{StaticResource MahApps.Styles.ToggleButton.Flat}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                ToolTip="{TemplateBinding ToolTip}">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
            <Setter Property="Cursor"
                    Value="Hand" />
            <Setter Property="ToolTipService.BetweenShowDelay"
                    Value="0" />
            <Setter Property="ToolTipService.InitialShowDelay"
                    Value="0" />

            <Style.Triggers>
                <Trigger Property="IsChecked"
                         Value="True">
                    <Setter Property="Background"
                            Value="#3cb371" />
                </Trigger>
                <Trigger Property="IsChecked"
                         Value="False">
                    <Setter Property="Background"
                            Value="#4d3cb371" />
                    <Setter Property="Foreground"
                            Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                </Trigger>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Background"
                            Value="#3cb371" />
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="True">
                    <Setter Property="Background"
                            Value="#48c17e" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ToggleButtonDifficultyNormal"
               TargetType="{x:Type RadioButton}"
               BasedOn="{StaticResource  MahApps.Styles.ToggleButton.Flat}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                ToolTip="{TemplateBinding ToolTip}">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
            <Setter Property="Cursor"
                    Value="Hand" />
            <Setter Property="ToolTipService.BetweenShowDelay"
                    Value="0" />
            <Setter Property="ToolTipService.InitialShowDelay"
                    Value="0" />

            <Style.Triggers>
                <Trigger Property="IsChecked"
                         Value="True">
                    <Setter Property="Background"
                            Value="#59b0f4" />
                </Trigger>
                <Trigger Property="IsChecked"
                         Value="False">
                    <Setter Property="Background"
                            Value="#4d59b0f4" />
                    <Setter Property="Foreground"
                            Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                </Trigger>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Background"
                            Value="#59b0f4" />
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="True">
                    <Setter Property="Background"
                            Value="#69b7f5" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ToggleButtonDifficultyHard"
               TargetType="{x:Type RadioButton}"
               BasedOn="{StaticResource  MahApps.Styles.ToggleButton.Flat}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                ToolTip="{TemplateBinding ToolTip}">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
            <Setter Property="Cursor"
                    Value="Hand" />
            <Setter Property="ToolTipService.BetweenShowDelay"
                    Value="0" />
            <Setter Property="ToolTipService.InitialShowDelay"
                    Value="0" />

            <Style.Triggers>
                <Trigger Property="IsChecked"
                         Value="True">
                    <Setter Property="Background"
                            Value="#ff6347" />
                </Trigger>
                <Trigger Property="IsChecked"
                         Value="False">
                    <Setter Property="Background"
                            Value="#4dff6347" />
                    <Setter Property="Foreground"
                            Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                </Trigger>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Background"
                            Value="#ff6347" />
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="True">
                    <Setter Property="Background"
                            Value="#ff7259" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ToggleButtonDifficultyExpert"
               TargetType="{x:Type RadioButton}"
               BasedOn="{StaticResource  MahApps.Styles.ToggleButton.Flat}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                ToolTip="{TemplateBinding ToolTip}">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
            <Setter Property="Cursor"
                    Value="Hand" />
            <Setter Property="ToolTipService.BetweenShowDelay"
                    Value="0" />
            <Setter Property="ToolTipService.InitialShowDelay"
                    Value="0" />

            <Style.Triggers>
                <Trigger Property="IsChecked"
                         Value="True">
                    <Setter Property="Background"
                            Value="#bf2a42" />
                </Trigger>
                <Trigger Property="IsChecked"
                         Value="False">
                    <Setter Property="Background"
                            Value="#4dbf2a42" />
                    <Setter Property="Foreground"
                            Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                </Trigger>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Background"
                            Value="#bf2a42" />
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="True">
                    <Setter Property="Background"
                            Value="#d2324c" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ToggleButtonDifficultyExpertPlus"
               TargetType="{x:Type RadioButton}"
               BasedOn="{StaticResource  MahApps.Styles.ToggleButton.Flat}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                ToolTip="{TemplateBinding ToolTip}">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
            <Setter Property="Cursor"
                    Value="Hand" />
            <Setter Property="ToolTipService.BetweenShowDelay"
                    Value="0" />
            <Setter Property="ToolTipService.InitialShowDelay"
                    Value="0" />

            <Style.Triggers>
                <Trigger Property="IsChecked"
                         Value="True">
                    <Setter Property="Background"
                            Value="#8f48db" />
                </Trigger>
                <Trigger Property="IsChecked"
                         Value="False">
                    <Setter Property="Background"
                            Value="#4d8f48db" />
                    <Setter Property="Foreground"
                            Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                </Trigger>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Background"
                            Value="#8f48db" />
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="True">
                    <Setter Property="Background"
                            Value="#9a5ade" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid>
        <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                      VerticalScrollBarVisibility="Auto">
            <Grid>
                <Grid VerticalAlignment="Top"
                      Height="300">
                    <Rectangle Margin="0,-5,0,10">
                        <Rectangle.Fill>
                            <ImageBrush ImageSource="{Binding Path=Beatmap.RealCoverURL}"
                                        Stretch="UniformToFill" />
                        </Rectangle.Fill>
                        <Rectangle.Effect>
                            <BlurEffect Radius="10" />
                        </Rectangle.Effect>
                    </Rectangle>
                    <Grid>
                        <Grid.Background>
                            <LinearGradientBrush StartPoint="0,0"
                                                 EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="#00000000" />
                                    <GradientStop Color="{DynamicResource MahApps.Colors.ThemeBackground}"
                                                  Offset="1" />
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Grid.Background>
                    </Grid>
                </Grid>

                <StackPanel Margin="30,5"
                            MaxWidth="1350">
                    <StackPanel Orientation="Horizontal"
                                Margin="0,0,0,30">
                        <Button x:Name="buttonBack"
                                Width="35"
                                Height="35"
                                Margin="0,5,0,0"
                                ToolTip="Back"
                                Click="ButtonBack_Click">
                            <icons:PackIconMaterial Kind="ArrowLeft"
                                                    Width="18"
                                                    Height="18" />
                        </Button>

                        <Label Content="Beatmap Information"
                               FontSize="45"
                               Margin="10,0,0,0" />
                    </StackPanel>

                    <st:AutoGrid x:Name="gridMain"
                                 Columns="1*"
                                 Rows="auto,auto,auto,auto,auto"
                                 Grid.Row="1">
                        <Grid Margin="0,0,0,30">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>

                            <Grid Width="200"
                                  Height="200"
                                  Margin="0,0,25,0">
                                <Image x:Name="imageCover"
                                       Source="{Binding Path=Beatmap.RealCoverURL}" />
                                <Button x:Name="buttonBigCover"
                                        BorderThickness="0"
                                        Foreground="White"
                                        Opacity="0"
                                        Cursor="Hand"
                                        Click="ButtonBigCover_Click">
                                    <Button.Triggers>
                                        <EventTrigger RoutedEvent="Button.Click">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="gridCoverImage"
                                                                     Storyboard.TargetProperty="Opacity"
                                                                     Duration="0:0:.15"
                                                                     From="0"
                                                                     To="1" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Button.Triggers>

                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="Button">
                                                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                                Background="{TemplateBinding Background}"
                                                                Margin="{TemplateBinding Margin}"
                                                                Padding="{TemplateBinding Padding}"
                                                                BorderThickness="0"
                                                                Opacity="{TemplateBinding Opacity}">
                                                            <ContentPresenter Content="{TemplateBinding Content}"
                                                                              HorizontalAlignment="Center"
                                                                              VerticalAlignment="Center" />
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="Black"
                                                                     Opacity=".5" />
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <EventTrigger RoutedEvent="Control.MouseEnter">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                             Duration="0:0:.15"
                                                                             To="1" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                                <EventTrigger RoutedEvent="Control.MouseLeave">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                             Duration="0:0:.15"
                                                                             To="0" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>

                                    <icons:PackIconMaterial Kind="ArrowExpandAll"
                                                            Width="25"
                                                            Height="25" />
                                </Button>
                            </Grid>
                            <st:AutoGrid Rows="auto,auto,auto"
                                         Columns="1*"
                                         VerticalAlignment="Center"
                                         Grid.Column="1">
                                <TextBlock TextWrapping="WrapWithOverflow">
                                    <Run Text="{Binding Path=Beatmap.Metadata.SongName}"
                                         FontSize="35" />
                                    <Run Text=" " />
                                    <Run Text="{Binding Path=Beatmap.Metadata.SongSubName}"
                                         FontSize="25">
                                        <Run.Foreground>
                                            <SolidColorBrush Color="{DynamicResource MahApps.Colors.ThemeForeground}"
                                                             Opacity=".5" />
                                        </Run.Foreground>   
                                    </Run>
                                </TextBlock>

                                <TextBlock Text="{Binding Path=Beatmap.Metadata.LevelAuthorName}"
                                           FontSize="25"
                                           Margin="0,0,0,10" />

                                <StackPanel Orientation="Horizontal">
                                    <Border CornerRadius="15"
                                            Background="#3cb371"
                                            ToolTip="Easy"
                                            ToolTipService.InitialShowDelay="0"
                                            ToolTipService.BetweenShowDelay="0"
                                            Margin="0,0,4,0"
                                            Visibility="{Binding Path=Beatmap.Difficulties.Easy, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Label Content="Easy"
                                               Foreground="White"
                                               FontSize="15"
                                               Margin="5,0" />
                                    </Border>
                                    <Border CornerRadius="15"
                                            Background="#59b0f4"
                                            ToolTip="Normal"
                                            ToolTipService.InitialShowDelay="0"
                                            ToolTipService.BetweenShowDelay="0"
                                            Margin="4,0,4,0"
                                            Visibility="{Binding Path=Beatmap.Difficulties.Normal, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Label Content="Normal"
                                               Foreground="White"
                                               FontSize="15"
                                               Margin="5,0" />
                                    </Border>
                                    <Border CornerRadius="15"
                                            Background="Tomato"
                                            ToolTip="Hard"
                                            ToolTipService.InitialShowDelay="0"
                                            ToolTipService.BetweenShowDelay="0"
                                            Margin="4,0,4,0"
                                            Visibility="{Binding Path=Beatmap.Difficulties.Hard, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Label Content="Hard"
                                               Foreground="White"
                                               FontSize="15"
                                               Margin="5,0" />
                                    </Border>
                                    <Border CornerRadius="15"
                                            Background="#bf2a42"
                                            ToolTip="Expert"
                                            ToolTipService.InitialShowDelay="0"
                                            ToolTipService.BetweenShowDelay="0"
                                            Margin="4,0,4,0"
                                            Visibility="{Binding Path=Beatmap.Difficulties.Expert, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Label Content="Expert"
                                               Foreground="White"
                                               FontSize="15"
                                               Margin="5,0" />
                                    </Border>
                                    <Border CornerRadius="15"
                                            Background="#8f48db"
                                            ToolTip="Expert+"
                                            ToolTipService.InitialShowDelay="0"
                                            ToolTipService.BetweenShowDelay="0"
                                            Margin="4,0,0,0"
                                            Visibility="{Binding Path=Beatmap.Difficulties.ExpertPlus, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Label Content="Expert+"
                                               Foreground="White"
                                               FontSize="15"
                                               Margin="5,0" />
                                    </Border>
                                </StackPanel>
                            </st:AutoGrid>
                        </Grid>

                        <st:StackPanel Orientation="Horizontal"
                                       Margin="0,0,0,20"
                                       MarginBetweenChildren="2">
                            <Grid>
                                <Grid Visibility="{Binding Path=Beatmap.IsDownloading, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                                    <Button x:Name="buttonDownloadBeatmap"
                                            Tag="{Binding Path=Beatmap.Key}"
                                            ToolTip="Download song"
                                            Width="35"
                                            Height="35"
                                            Foreground="#2ec92e"
                                            Visibility="{Binding Path=Beatmap.IsDownloaded, Converter={StaticResource InverseBooleanToVisibilityConverter}}"
                                            IsEnabled="{Binding Path=Beatmap.IsDownloaded, Converter={StaticResource InverseBooleanConverter}}"
                                            Click="ButtonDownloadBeatmap_Click">
                                        <icons:PackIconMaterial Kind="Download"
                                                                Width="18"
                                                                Height="18" />
                                    </Button>
                                    <Button x:Name="buttonDeleteBeatmap"
                                            Tag="{Binding Path=Beatmap.Key}"
                                            ToolTip="Delete song"
                                            Width="35"
                                            Height="35"
                                            Foreground="#ff4040"
                                            Visibility="{Binding Path=Beatmap.IsDownloaded, Converter={StaticResource BooleanToVisibilityConverter}}"
                                            IsEnabled="{Binding Path=Beatmap.IsDownloaded}"
                                            Click="ButtonDeleteBeatmap_Click">
                                        <icons:PackIconMaterial Kind="DeleteForever"
                                                                Width="18"
                                                                Height="18" />
                                    </Button>
                                </Grid>
                                <Grid Width="35"
                                      Height="35">
                                    <mah:ProgressRing Width="18"
                                                      Height="18"
                                                      IsActive="{Binding Path=Beatmap.IsDownloading}"
                                                      IsEnabled="{Binding Path=Beatmap.IsDownloading}" />
                                </Grid>
                            </Grid>
                            <Button x:Name="buttonRefreshData"
                                    Width="35"
                                    Height="35"
                                    ToolTip="Refresh the data"
                                    Click="ButtonRefreshData_Click">
                                <icons:PackIconMaterial Kind="Refresh"
                                                        Width="18"
                                                        Height="18" />
                            </Button>
                            <Button x:Name="buttonOpenFolder"
                                    Width="35"
                                    Height="35"
                                    ToolTip="Open folder"
                                    Visibility="{Binding Path=Beatmap.IsDownloaded, Converter={StaticResource BooleanToVisibilityConverter}}"
                                    Click="ButtonOpenFolder_Click">
                                <icons:PackIconMaterial Kind="Folder"
                                                        Width="18"
                                                        Height="18" />
                            </Button>
                            <Button x:Name="buttonPreviewBeatmap"
                                    Width="35"
                                    Height="35"
                                    ToolTip="Preview beatmap"
                                    Click="ButtonPreviewBeatmap_Click">
                                <icons:PackIconMaterial Kind="Eye"
                                                        Width="18"
                                                        Height="18" />
                            </Button>
                            <Button x:Name="buttonOpenOnBeatsaver"
                                    Width="35"
                                    Height="35"
                                    ToolTip="Open on beatsaver"
                                    Click="ButtonOpenOnBeatsaver_Click">
                                <icons:PackIconMaterial Kind="Link"
                                                        Width="18"
                                                        Height="18" />
                            </Button>
                        </st:StackPanel>

                        <Grid Margin="0,0,0,30">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>

                            <st:AutoGrid Columns="auto,1*"
                                         Rows="auto,auto,auto,auto,auto,auto,auto"
                                         ChildMargin="2.5,0"
                                         Margin="0,0,2.5,0">
                                <Label Content="Name"
                                       HorizontalContentAlignment="Right" />
                                <TextBox Text="{Binding Path=Beatmap.Metadata.SongName}" />

                                <Label Content="Subname"
                                       HorizontalContentAlignment="Right" />
                                <TextBox Text="{Binding Path=Beatmap.Metadata.SongSubName, TargetNullValue=-}" />

                                <Label Content="Artist"
                                       HorizontalContentAlignment="Right" />
                                <TextBox Text="{Binding Path=Beatmap.Metadata.SongAuthorName, TargetNullValue=-}" />

                                <Label Content="Mapper"
                                       HorizontalContentAlignment="Right" />
                                <TextBox Text="{Binding Path=Beatmap.Metadata.LevelAuthorName}" />

                                <Label Content="Duration"
                                       HorizontalContentAlignment="Right" />
                                <Label Content="{Binding Path=Beatmap.Metadata.DurationTimeSpan, Converter={StaticResource TimeSpanToStringConverter}}" />

                                <Label Content="BPM"
                                       HorizontalContentAlignment="Right" />
                                <Label Content="{Binding Path=Beatmap.Metadata.BeatsPerMinute}" />

                                <Label Content="Key"
                                       HorizontalContentAlignment="Right" />
                                <TextBox Text="{Binding Path=Beatmap.Key}" />
                            </st:AutoGrid>

                            <st:AutoGrid Columns="auto,1*"
                                         Rows="auto,auto,auto,auto,auto,auto"
                                         ChildMargin="2.5,0"
                                         Grid.Column="1"
                                         Margin="2.5,0,0,0">
                                <Label Content="Uploaded"
                                       HorizontalContentAlignment="Right" />
                                <Label Content="{Binding Path=Beatmap.Uploaded, Converter={StaticResource DateTimeConverter}}" />

                                <Label Content="Downloads"
                                       HorizontalContentAlignment="Right" />
                                <Label Content="{Binding Path=Beatmap.Stats.Downloads, Converter={StaticResource AddCommasConverter}}" />

                                <Label Content="Plays"
                                       HorizontalContentAlignment="Right" />
                                <Label Content="{Binding Path=Beatmap.Stats.Plays, Converter={StaticResource AddCommasConverter}}" />

                                <Label Content="Up votes"
                                       HorizontalContentAlignment="Right" />
                                <Label Content="{Binding Path=Beatmap.Stats.UpVotes, Converter={StaticResource AddCommasConverter}}" />

                                <Label Content="Down votes"
                                       HorizontalContentAlignment="Right" />
                                <Label Content="{Binding Path=Beatmap.Stats.DownVotes, Converter={StaticResource AddCommasConverter}}" />

                                <Label Content="Rating"
                                       HorizontalContentAlignment="Right" />
                                <Label Content="{Binding Path=Beatmap.Stats.Rating, Converter={StaticResource FloatToPercentageConverter}}" />
                            </st:AutoGrid>
                        </Grid>

                        <Expander Header="Description"
                                  IsExpanded="True"
                                  Margin="0,0,0,10">
                            <TextBox Text="{Binding Path=Beatmap.Description}"
                                     TextWrapping="Wrap" />
                        </Expander>

                        <GroupBox Header="Difficulties">
                            <st:AutoGrid Rows="auto,auto,auto"
                                         Columns="1*">
                                <RadioButton x:Name="radioButtonDifficultyTemplate"
                                             st:StackPanel.Fill="Fill"
                                             HorizontalContentAlignment="Center"
                                             Visibility="Collapsed" />

                                <st:StackPanel x:Name="stackPanelSets"
                                               Orientation="Horizontal" />
                                <st:StackPanel x:Name="stackPanelDifficulties"
                                               Orientation="Horizontal"
                                               Margin="0,0,0,10">
                                    <RadioButton x:Name="radioButtonEasyDifficulty"
                                                 st:StackPanel.Fill="Fill"
                                                 HorizontalContentAlignment="Center"
                                                 Content="Easy"
                                                 Visibility="{Binding Path=Characteristic.Difficulties.Easy, Converter={StaticResource NullToVisibilityConverter}}"
                                                 Style="{DynamicResource ToggleButtonDifficultyEasy}"
                                                 ToolTip="Easy"
                                                 Checked="RadioButtonEasyDifficulty_Checked" />
                                    <RadioButton x:Name="radioButtonNormalDifficulty"
                                                 st:StackPanel.Fill="Fill"
                                                 HorizontalContentAlignment="Center"
                                                 Content="Normal"
                                                 Visibility="{Binding Path=Characteristic.Difficulties.Normal, Converter={StaticResource NullToVisibilityConverter}}"
                                                 Style="{DynamicResource ToggleButtonDifficultyNormal}"
                                                 ToolTip="Normal"
                                                 Checked="RadioButtonNormalDifficulty_Checked" />
                                    <RadioButton x:Name="radioButtonHardDifficulty"
                                                 st:StackPanel.Fill="Fill"
                                                 HorizontalContentAlignment="Center"
                                                 Content="Hard"
                                                 Visibility="{Binding Path=Characteristic.Difficulties.Hard, Converter={StaticResource NullToVisibilityConverter}}"
                                                 Style="{DynamicResource ToggleButtonDifficultyHard}"
                                                 ToolTip="Hard"
                                                 Checked="RadioButtonHardDifficulty_Checked" />
                                    <RadioButton x:Name="radioButtonExpertDifficulty"
                                                 st:StackPanel.Fill="Fill"
                                                 HorizontalContentAlignment="Center"
                                                 Content="Expert"
                                                 Visibility="{Binding Path=Characteristic.Difficulties.Expert, Converter={StaticResource NullToVisibilityConverter}}"
                                                 Style="{DynamicResource ToggleButtonDifficultyExpert}"
                                                 ToolTip="Expert"
                                                 Checked="RadioButtonExpertDifficulty_Checked" />
                                    <RadioButton x:Name="radioButtonExpertPlusDifficulty"
                                                 st:StackPanel.Fill="Fill"
                                                 HorizontalContentAlignment="Center"
                                                 Content="Expert+"
                                                 Visibility="{Binding Path=Characteristic.Difficulties.ExpertPlus, Converter={StaticResource NullToVisibilityConverter}}"
                                                 Style="{DynamicResource ToggleButtonDifficultyExpertPlus}"
                                                 ToolTip="Expert+"
                                                 Checked="RadioButtonExpertPlusDifficulty_Checked" />
                                </st:StackPanel>

                                <st:StackPanel Orientation="Horizontal"
                                               MarginBetweenChildren="10">
                                    <st:AutoGrid Columns="auto,1*"
                                                 Rows="auto,auto,auto,auto"
                                                 ChildMargin="2.5,0"
                                                 st:StackPanel.Fill="Fill">
                                        <Label Content="Notes"
                                               HorizontalContentAlignment="Right" />
                                        <Label Content="{Binding Path=Difficulty.Notes, Mode=OneWay, Converter={StaticResource AddCommasConverter}}" />

                                        <Label Content="Bombs"
                                               HorizontalContentAlignment="Right" />
                                        <Label Content="{Binding Path=Difficulty.Bombs, Mode=OneWay, Converter={StaticResource AddCommasConverter}}" />

                                        <Label Content="Obstacles"
                                               HorizontalContentAlignment="Right" />
                                        <Label Content="{Binding Path=Difficulty.Obstacles, Mode=OneWay, Converter={StaticResource AddCommasConverter}}" />
                                    </st:AutoGrid>
                                    <st:AutoGrid Columns="auto,1*"
                                                 Rows="auto,auto,auto,auto"
                                                 ChildMargin="2.5,0"
                                                 st:StackPanel.Fill="Fill">
                                        <Label Content="Note Movement Speed"
                                               HorizontalContentAlignment="Right" />
                                        <Label Content="{Binding Path=Difficulty.NoteJumpMovementSpeed, Converter={StaticResource AddCommasConverter}}" />

                                        <Label Content="Note Start Offset"
                                               HorizontalContentAlignment="Right" />
                                        <Label Content="{Binding Path=Difficulty.NoteJumpStartBeatOffset, Converter={StaticResource AddCommasConverter}}" />

                                        <Label Content="Half Jump Duration"
                                               HorizontalContentAlignment="Right" />
                                        <Label Content="{Binding Path=Difficulty.HalfJumpDuration, Converter={StaticResource AddCommasConverter}}" />

                                        <Label Content="Jump Distance"
                                               HorizontalContentAlignment="Right" />
                                        <Label Content="{Binding Path=Difficulty.JumpDistance, Converter={StaticResource AddCommasConverter}}" />
                                    </st:AutoGrid>
                                </st:StackPanel>
                            </st:AutoGrid>
                        </GroupBox>
                    </st:AutoGrid>
                </StackPanel>
            </Grid>
        </ScrollViewer>

        <Grid x:Name="gridCoverImage"
              Visibility="Hidden"
              Opacity="0">
            <Grid.Triggers>
                <EventTrigger RoutedEvent="Control.MouseUp">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Duration="0:0:.15"
                                             From="1"
                                             To="0"
                                             Completed="DoubleAnimation_CloseCover" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Grid.Triggers>

            <Grid.Background>
                <SolidColorBrush Color="{DynamicResource MahApps.Colors.ThemeBackground}"
                                 Opacity=".75" />
            </Grid.Background>

            <st:StackPanel Margin="50"
                           VerticalAlignment="Center"
                           MarginBetweenChildren="10">
                <Image x:Name="imageCoverImage"
                       Width="520"
                       Height="520"
                       Source="{Binding Path=Beatmap.RealCoverURL}" />
                <Button x:Name="buttonCloseCoverImage"
                        HorizontalAlignment="Center"
                        Background="Transparent"
                        BorderThickness="0"
                        Width="42"
                        Height="42"
                        Cursor="Hand"
                        Style="{DynamicResource MahApps.Styles.Button.Circle}">
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="gridCoverImage"
                                                     Storyboard.TargetProperty="Opacity"
                                                     Duration="0:0:.15"
                                                     From="1"
                                                     To="0"
                                                     Completed="DoubleAnimation_CloseCover" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Button.Triggers>

                    <icons:PackIconMaterial Kind="Close"
                                            Width="22"
                                            Height="22" />
                </Button>
            </st:StackPanel>
        </Grid>
    </Grid>
</UserControl>
