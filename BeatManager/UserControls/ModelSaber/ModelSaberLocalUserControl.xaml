<UserControl x:Class="BeatManager.UserControls.ModelSaber.ModelSaberLocalUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:st="http://schemas.spicytaco.io/"
             xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
             mc:Ignorable="d"
             d:DesignHeight="450"
             d:DesignWidth="800">
    <Grid Margin="30,5"
          MaxWidth="1350">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <Label FontSize="45"
               Grid.ColumnSpan="2"
               Margin="0,0,0,30">
            <Label.Content>
                <TextBlock Text="{Binding Path=ModelType, FallbackValue='Model Local', StringFormat='{}{0} Local'}" />
            </Label.Content>
        </Label>
        
        <DataGrid x:Name="dataGridModels"
                  Grid.Row="1"
                  ItemsSource="{Binding Path=LocalModels.Models, NotifyOnTargetUpdated=True}"
                  AutoGenerateColumns="False"
                  SelectionMode="Extended"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  CanUserReorderColumns="False"
                  CanUserResizeRows="False"
                  CanUserResizeColumns="False"
                  VerticalScrollBarVisibility="Disabled"
                  HorizontalScrollBarVisibility="Disabled"
                  VirtualizingPanel.IsVirtualizing="True"
                  TargetUpdated="DataGridModels_TargetUpdated"
                  LoadingRow="DataGridModels_LoadingRow"
                  SelectionChanged="DataGridModels_SelectionChanged">
            <DataGrid.ContextMenu>
                <ContextMenu x:Name="contextMenuDataGridModels"
                             Opened="ContextMenuDataGridModels_Opened">
                    <MenuItem x:Name="menuItemDataGridModelsDelete"
                              Click="MenuItemDataGridModelsDelete_Click">
                        <MenuItem.Header>
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="Delete {0} {1}s">
                                        <Binding Path="SelectedModelsToDelete" />
                                        <Binding Path="ModelType"
                                                 Mode="OneWay" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </MenuItem.Header>
                        <MenuItem.Icon>
                            <icons:PackIconMaterial Kind="Delete"
                                                    Margin="5,0,0,0" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </DataGrid.ContextMenu>
            
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Cover">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Border Width="25"
                                        Height="25"
                                        CornerRadius="100">
                                    <Border.Background>
                                        <ImageBrush ImageSource="{Binding Path=OnlineModel.RealThumbnail, Mode=OneWay, TargetNullValue={x:Null}, IsAsync=True}" />
                                    </Border.Background>
                                    <Button x:Name="buttonBigCover"
                                            Tag="{Binding Path=Name}"
                                            Style="{DynamicResource CustomButtonCover}"
                                            Click="ButtonBigCover_Click">
                                        <Button.Resources>
                                            <Style TargetType="Border">
                                                <Setter Property="CornerRadius"
                                                        Value="100" />
                                            </Style>
                                        </Button.Resources>
                                        <icons:PackIconMaterial Kind="ArrowExpandAll"
                                                                Width="14"
                                                                Height="14" />
                                    </Button>
                                </Border>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Name"
                                    Width="1*"
                                    IsReadOnly="True"
                                    Binding="{Binding Path=Name, IsAsync=True, FallbackValue='...'}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock"
                               BasedOn="{StaticResource MahApps.Styles.TextBlock}">
                            <Setter Property="TextTrimming"
                                    Value="CharacterEllipsis" />
                            <Setter Property="Margin"
                                    Value="10,0,0,0" />
                            <Setter Property="ToolTip"
                                    Value="{Binding Path=Name, IsAsync=True}" />
                            <Setter Property="ToolTipService.BetweenShowDelay"
                                    Value="0" />
                            <Setter Property="ToolTipService.InitialShowDelay"
                                    Value="0" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Author"
                                    Width=".7*"
                                    IsReadOnly="True"
                                    Binding="{Binding Path=OnlineModel.Author, IsAsync=True, FallbackValue='...', TargetNullValue='-'}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock"
                               BasedOn="{StaticResource MahApps.Styles.TextBlock}">
                            <Setter Property="TextTrimming"
                                    Value="CharacterEllipsis" />
                            <Setter Property="Margin"
                                    Value="10,0,0,0" />
                            <Setter Property="ToolTip"
                                    Value="{Binding Path=OnlineModel.Author, IsAsync=True}" />
                            <Setter Property="ToolTipService.BetweenShowDelay"
                                    Value="0" />
                            <Setter Property="ToolTipService.InitialShowDelay"
                                    Value="0" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTemplateColumn Header="Status"
                                        IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid Margin="10,0,0,0">
                                <Border Width="25"
                                        Height="25"
                                        Background="#2ec92e"
                                        CornerRadius="100"
                                        ToolTip="Approved"
                                        ToolTipService.BetweenShowDelay="0"
                                        ToolTipService.InitialShowDelay="0"
                                        Visibility="{Binding Path=OnlineModel.StatusBool, IsAsync=True, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Grid>
                                        <icons:PackIconMaterial Kind="Check"
                                                                Width="15"
                                                                Height="15"
                                                                HorizontalAlignment="Center"
                                                                VerticalAlignment="Center" />
                                        <Border Style="{DynamicResource BorderDetails}"
                                                CornerRadius="15" />
                                    </Grid>
                                </Border>
                                <Border Width="25"
                                        Height="25"
                                        Background="#ff4040"
                                        CornerRadius="100"
                                        ToolTip="Not Approved"
                                        ToolTipService.BetweenShowDelay="0"
                                        ToolTipService.InitialShowDelay="0"
                                        Visibility="{Binding Path=OnlineModel.StatusBool, IsAsync=True, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                                    <Grid>
                                        <icons:PackIconMaterial Kind="Close"
                                                                Width="15"
                                                                Height="15"
                                                                HorizontalAlignment="Center"
                                                                VerticalAlignment="Center" />
                                        <Border Style="{DynamicResource BorderDetails}"
                                                CornerRadius="15" />
                                    </Grid>
                                </Border>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Actions"
                                        IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="1*" />
                                </Grid.ColumnDefinitions>

                                <Button Tag="{Binding Path=Name}"
                                        Style="{DynamicResource TransparentCircleButton}"
                                        Width="30"
                                        Height="30"
                                        Foreground="#ff4040"
                                        Click="Model_Delete">
                                    <Button.ToolTip>
                                        <TextBlock Text="{Binding Path=ModelType, StringFormat='{}Delete {0}'}" />
                                    </Button.ToolTip>

                                    <icons:PackIconMaterial Kind="DeleteForever"
                                                            Style="{DynamicResource CustomIconMaterial}" />
                                </Button>
                                <Button Tag="{Binding Path=Name}"
                                        Grid.Column="1"
                                        Style="{DynamicResource TransparentCircleButton}"
                                        Width="30"
                                        Height="30"
                                        Click="Model_Details">
                                    <Button.ToolTip>
                                        <TextBlock Text="{Binding Path=ModelType, StringFormat='{}{0} Details'}" />
                                    </Button.ToolTip>

                                    <icons:PackIconMaterial Kind="ArrowRight"
                                                            Style="{DynamicResource CustomIconMaterial}" />
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <StackPanel x:Name="stackPanelNavigation"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    Grid.Row="2">
            <Button x:Name="buttonReloadData"
                    Style="{DynamicResource TransparentCircleButton}"
                    Width="30"
                    Height="30"
                    ToolTip="Reload Beatmaps"
                    Click="ButtonReloadData_Click">
                <icons:PackIconMaterial Kind="Refresh"
                                        Style="{DynamicResource CustomIconMaterial}" />
            </Button>

            <Label VerticalContentAlignment="Center">
                <Label.Content>
                    <TextBlock>
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}Page {0} of {1}"
                                          FallbackValue="Page 0 of 0">
                                <Binding Path="LocalModels.CurrentPageReal" />
                                <Binding Path="LocalModels.LastPageReal" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </Label.Content>
            </Label>

            <Button x:Name="buttonFirstPage"
                    Width="30"
                    Height="30"
                    ToolTip="First page"
                    IsEnabled="False"
                    Style="{DynamicResource TransparentCircleButton}"
                    Click="ButtonFirstPage_Click">
                <icons:PackIconMaterial Kind="ArrowLeftBold"
                                        Style="{DynamicResource CustomIconMaterial}" />
            </Button>
            <Button x:Name="buttonPreviousPage"
                    Width="30"
                    Height="30"
                    ToolTip="Previous page"
                    IsEnabled="False"
                    Style="{DynamicResource TransparentCircleButton}"
                    Click="ButtonPreviousPage_Click">
                <icons:PackIconMaterial Kind="ArrowLeft"
                                        Style="{DynamicResource CustomIconMaterial}" />
            </Button>
            <Button x:Name="buttonNextPage"
                    Width="30"
                    Height="30"
                    ToolTip="Next page"
                    IsEnabled="False"
                    Style="{DynamicResource TransparentCircleButton}"
                    Click="ButtonNextPage_Click">
                <icons:PackIconMaterial Kind="ArrowRight"
                                        Style="{DynamicResource CustomIconMaterial}" />
            </Button>
            <Button x:Name="buttonLastPage"
                    Width="30"
                    Height="30"
                    ToolTip="Last page"
                    IsEnabled="False"
                    Style="{DynamicResource TransparentCircleButton}"
                    Click="ButtonLastPage_Click">
                <icons:PackIconMaterial Kind="ArrowRightBold"
                                        Style="{DynamicResource CustomIconMaterial}" />
            </Button>
        </StackPanel>
    </Grid>
</UserControl>
