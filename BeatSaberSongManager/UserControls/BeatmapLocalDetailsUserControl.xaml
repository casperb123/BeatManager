<UserControl x:Class="BeatSaberSongManager.UserControls.BeatmapLocalDetailsUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:converters="clr-namespace:BeatSaberSongManager.Converters"
             xmlns:st="http://schemas.spicytaco.io/"
             mc:Ignorable="d"
             d:DesignWidth="800"
             d:DesignHeight="1088">
    <UserControl.Resources>
        <converters:ImageSourceToBitmapConverter x:Key="ImageSourceToBitmapConverter" />
        <converters:BooleanToVisiblityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
        <converters:DateTimeConverter x:Key="DateTimeConverter" />
        <converters:FloatToPercentageConverter x:Key="FloatToPercentageConverter" />
        <converters:AddCommasConverter x:Key="AddCommasConverter" />
        <converters:TimeSpanToStringConverter x:Key="TimeSpanToStringConverter" />

        <Style TargetType="TextBox"
               BasedOn="{StaticResource MahApps.Styles.TextBox}">
            <Setter Property="IsReadOnly"
                    Value="True" />
            <Setter Property="Background"
                    Value="{x:Null}" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="FontSize"
                    Value="15" />
            <Setter Property="HorizontalAlignment"
                    Value="Left" />
        </Style>
        <Style TargetType="Label"
               BasedOn="{StaticResource MahApps.Styles.Label}">
            <Setter Property="FontSize"
                    Value="15" />
        </Style>

        <Style x:Key="ToggleButtonDifficultySet"
               TargetType="ToggleButton"
               BasedOn="{StaticResource MahApps.Styles.ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                Padding="4"
                                BorderThickness="0">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FontSize"
                    Value="14" />
            <Setter Property="FontWeight"
                    Value="Regular" />
            <Style.Triggers>
                <Trigger Property="IsChecked"
                         Value="True">
                    <Setter Property="Foreground"
                            Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ToggleButtonDifficultyEasy"
               TargetType="ToggleButton"
               BasedOn="{StaticResource MahApps.Styles.ToggleButton.Flat}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked"
                         Value="True">
                    <Setter Property="Background"
                            Value="#3cb371" />
                </Trigger>
                <Trigger Property="IsChecked"
                         Value="False">
                    <Setter Property="Background"
                            Value="#4d3cb371" />
                    <Setter Property="Foreground"
                            Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                </Trigger>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Background"
                            Value="#3cb371" />
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="True">
                    <Setter Property="Background"
                            Value="#48c17e" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ToggleButtonDifficultyNormal"
               TargetType="{x:Type RadioButton}"
               BasedOn="{StaticResource  MahApps.Styles.ToggleButton.Flat}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked"
                         Value="True">
                    <Setter Property="Background"
                            Value="#59b0f4" />
                </Trigger>
                <Trigger Property="IsChecked"
                         Value="False">
                    <Setter Property="Background"
                            Value="#4d59b0f4" />
                    <Setter Property="Foreground"
                            Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                </Trigger>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Background"
                            Value="#59b0f4" />
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="True">
                    <Setter Property="Background"
                            Value="#69b7f5" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ToggleButtonDifficultyHard"
               TargetType="{x:Type RadioButton}"
               BasedOn="{StaticResource  MahApps.Styles.ToggleButton.Flat}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked"
                         Value="True">
                    <Setter Property="Background"
                            Value="#ff6347" />
                </Trigger>
                <Trigger Property="IsChecked"
                         Value="False">
                    <Setter Property="Background"
                            Value="#4dff6347" />
                    <Setter Property="Foreground"
                            Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                </Trigger>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Background"
                            Value="#ff6347" />
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="True">
                    <Setter Property="Background"
                            Value="#ff7259" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ToggleButtonDifficultyExpert"
               TargetType="{x:Type RadioButton}"
               BasedOn="{StaticResource  MahApps.Styles.ToggleButton.Flat}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked"
                         Value="True">
                    <Setter Property="Background"
                            Value="#bf2a42" />
                </Trigger>
                <Trigger Property="IsChecked"
                         Value="False">
                    <Setter Property="Background"
                            Value="#4dbf2a42" />
                    <Setter Property="Foreground"
                            Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                </Trigger>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Background"
                            Value="#bf2a42" />
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="True">
                    <Setter Property="Background"
                            Value="#d2324c" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ToggleButtonDifficultyExpertPlus"
               TargetType="{x:Type RadioButton}"
               BasedOn="{StaticResource  MahApps.Styles.ToggleButton.Flat}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked"
                         Value="True">
                    <Setter Property="Background"
                            Value="#8f48db" />
                </Trigger>
                <Trigger Property="IsChecked"
                         Value="False">
                    <Setter Property="Background"
                            Value="#4d8f48db" />
                    <Setter Property="Foreground"
                            Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                </Trigger>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Background"
                            Value="#8f48db" />
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="True">
                    <Setter Property="Background"
                            Value="#9a5ade" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <ScrollViewer x:Name="scrollViewer"
                  HorizontalScrollBarVisibility="Disabled"
                  VerticalScrollBarVisibility="Auto">
        <StackPanel Margin="30,5">
            <StackPanel Orientation="Horizontal"
                        Margin="0,0,0,30">
                <Button x:Name="buttonBack"
                        Background="Transparent"
                        BorderThickness="0"
                        Style="{DynamicResource MahApps.Styles.Button.Circle}"
                        Width="35"
                        Height="35"
                        Margin="0,5,0,0"
                        Click="ButtonBack_Click">
                    <icons:PackIconMaterial Kind="ArrowLeft"
                                            Width="20"
                                            Height="20" />
                </Button>

                <Label Content="Beatmap Information"
                       FontSize="45"
                       Margin="10,0,0,0" />
            </StackPanel>

            <st:AutoGrid x:Name="gridMain"
                         Columns="1*"
                         Rows="auto,auto,auto,auto,auto"
                         Grid.Row="1">
                <st:AutoGrid Margin="0,0,0,30"
                             Columns="auto,1*">
                    <Image x:Name="imageCover"
                           Width="200"
                           Height="200"
                           Margin="0,0,25,0"
                           Source="{Binding Path=Beatmap.CoverImagePath, Converter={StaticResource ImageSourceToBitmapConverter}}" />
                    <st:AutoGrid Rows="auto,auto,auto"
                                 Columns="1*"
                                 VerticalAlignment="Center">
                        <TextBlock TextWrapping="WrapWithOverflow">
                            <Run Text="{Binding Path=Beatmap.SongName}"
                                 FontSize="35" />
                            <Run Text=" " />
                            <Run Text="{Binding Path=Beatmap.SongSubName}"
                                 FontSize="25">
                                <Run.Foreground>
                                    <SolidColorBrush Color="{DynamicResource MahApps.Colors.ThemeForeground}"
                                                     Opacity=".5" />
                                </Run.Foreground>
                            </Run>
                        </TextBlock>

                        <TextBlock Text="{Binding Path=Beatmap.LevelAuthorName}"
                                   FontSize="25"
                                   Margin="0,0,0,10" />

                        <StackPanel Orientation="Horizontal">
                            <Border CornerRadius="15"
                                    Background="#3cb371"
                                    ToolTip="Easy"
                                    ToolTipService.InitialShowDelay="0"
                                    ToolTipService.BetweenShowDelay="0"
                                    Margin="0,0,4,0"
                                    Visibility="{Binding Path=Beatmap.Easy, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Label Content="Easy"
                                       Foreground="White"
                                       FontSize="15"
                                       Margin="5,0" />
                            </Border>
                            <Border CornerRadius="15"
                                    Background="#59b0f4"
                                    ToolTip="Normal"
                                    ToolTipService.InitialShowDelay="0"
                                    ToolTipService.BetweenShowDelay="0"
                                    Margin="4,0,4,0"
                                    Visibility="{Binding Path=Beatmap.Normal, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Label Content="Normal"
                                       Foreground="White"
                                       FontSize="15"
                                       Margin="5,0" />
                            </Border>
                            <Border CornerRadius="15"
                                    Background="Tomato"
                                    ToolTip="Hard"
                                    ToolTipService.InitialShowDelay="0"
                                    ToolTipService.BetweenShowDelay="0"
                                    Margin="4,0,4,0"
                                    Visibility="{Binding Path=Beatmap.Hard, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Label Content="Hard"
                                       Foreground="White"
                                       FontSize="15"
                                       Margin="5,0" />
                            </Border>
                            <Border CornerRadius="15"
                                    Background="#bf2a42"
                                    ToolTip="Expert"
                                    ToolTipService.InitialShowDelay="0"
                                    ToolTipService.BetweenShowDelay="0"
                                    Margin="4,0,4,0"
                                    Visibility="{Binding Path=Beatmap.Expert, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Label Content="Expert"
                                       Foreground="White"
                                       FontSize="15"
                                       Margin="5,0" />
                            </Border>
                            <Border CornerRadius="15"
                                    Background="#8f48db"
                                    ToolTip="Expert+"
                                    ToolTipService.InitialShowDelay="0"
                                    ToolTipService.BetweenShowDelay="0"
                                    Margin="4,0,0,0"
                                    Visibility="{Binding Path=Beatmap.ExpertPlus, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Label Content="Expert+"
                                       Foreground="White"
                                       FontSize="15"
                                       Margin="5,0" />
                            </Border>
                        </StackPanel>
                    </st:AutoGrid>
                </st:AutoGrid>

                <StackPanel Orientation="Horizontal"
                            Margin="0,0,0,20">
                    <Button x:Name="buttonDeleteBeatmap"
                            Background="Transparent"
                            BorderThickness="0"
                            Style="{DynamicResource MahApps.Styles.Button.Circle}"
                            Width="35"
                            Height="35"
                            ToolTip="Delete the beatmap"
                            ToolTipService.BetweenShowDelay="0"
                            ToolTipService.InitialShowDelay="0"
                            Margin="0,0,2.5,0"
                            Click="ButtonDeleteBeatmap_Click">
                        <icons:PackIconMaterial Kind="DeleteForever"
                                                Width="20"
                                                Height="20" />
                    </Button>
                    <Button x:Name="buttonRefreshData"
                            Background="Transparent"
                            BorderThickness="0"
                            Style="{DynamicResource MahApps.Styles.Button.Circle}"
                            Width="35"
                            Height="35"
                            ToolTip="Refresh the data"
                            ToolTipService.BetweenShowDelay="0"
                            ToolTipService.InitialShowDelay="0"
                            Margin="2.5,0,2.5,0"
                            Click="ButtonRefreshData_Click">
                        <icons:PackIconMaterial Kind="Refresh"
                                                Width="20"
                                                Height="20" />
                    </Button>
                    <Button x:Name="buttonOpenFolder"
                            Background="Transparent"
                            BorderThickness="0"
                            Style="{DynamicResource MahApps.Styles.Button.Circle}"
                            Width="35"
                            Height="35"
                            ToolTip="Open folder"
                            ToolTipService.BetweenShowDelay="0"
                            ToolTipService.InitialShowDelay="0"
                            Margin="2.5,0,2.5,0"
                            Click="ButtonOpenFolder_Click">
                        <icons:PackIconMaterial Kind="Folder"
                                                Width="20"
                                                Height="20" />
                    </Button>
                    <Button x:Name="buttonPreviewBeatmap"
                            Background="Transparent"
                            BorderThickness="0"
                            Style="{DynamicResource MahApps.Styles.Button.Circle}"
                            Width="35"
                            Height="35"
                            ToolTip="Preview beatmap"
                            ToolTipService.BetweenShowDelay="0"
                            ToolTipService.InitialShowDelay="0"
                            Margin="2.5,0,2.5,0"
                            Click="ButtonPreviewBeatmap_Click">
                        <icons:PackIconMaterial Kind="Eye"
                                                Width="20"
                                                Height="20" />
                    </Button>
                    <Button x:Name="buttonOpenOnBeatsaver"
                            Background="Transparent"
                            BorderThickness="0"
                            Style="{DynamicResource MahApps.Styles.Button.Circle}"
                            Width="35"
                            Height="35"
                            ToolTip="Open on beatsaver"
                            ToolTipService.BetweenShowDelay="0"
                            ToolTipService.InitialShowDelay="0"
                            Margin="2.5,0,0,0"
                            Click="ButtonOpenOnBeatsaver_Click">
                        <icons:PackIconMaterial Kind="Link"
                                                Width="20"
                                                Height="20" />
                    </Button>
                </StackPanel>

                <Grid Margin="0,0,0,30">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>

                    <st:AutoGrid Columns="auto,1*"
                                 Rows="auto,auto,auto,auto,auto,auto,auto"
                                 ChildMargin="2.5,0"
                                 Margin="0,0,2.5,0">
                        <Label Content="Name"
                               HorizontalContentAlignment="Right" />
                        <TextBox Text="{Binding Path=Beatmap.SongName}" />

                        <Label Content="Subname"
                               HorizontalContentAlignment="Right" />
                        <TextBox Text="{Binding Path=Beatmap.SongSubName, TargetNullValue=-}" />

                        <Label Content="Artist"
                               HorizontalContentAlignment="Right" />
                        <TextBox Text="{Binding Path=Beatmap.SongAuthorName, TargetNullValue=-}" />

                        <Label Content="Mapper"
                               HorizontalContentAlignment="Right" />
                        <TextBox Text="{Binding Path=Beatmap.LevelAuthorName}" />

                        <Label Content="Duration"
                               HorizontalContentAlignment="Right" />
                        <Label Content="{Binding Path=Beatmap.Duration, Converter={StaticResource TimeSpanToStringConverter}}" />
                        
                        <Label Content="BPM"
                               HorizontalContentAlignment="Right" />
                        <Label Content="{Binding Path=Beatmap.BeatsPerMinute}" />

                        <Label Content="Key"
                               HorizontalContentAlignment="Right" />
                        <TextBox Text="{Binding Path=Beatmap.OnlineBeatmap.Key, TargetNullValue=-}" />
                    </st:AutoGrid>

                    <st:AutoGrid Columns="auto,1*"
                                 Rows="auto,auto,auto,auto,auto,auto"
                                 ChildMargin="2.5,0"
                                 Grid.Column="1"
                                 Margin="2.5,0,0,0">
                        <Label Content="Uploaded"
                               HorizontalContentAlignment="Right" />
                        <Label Content="{Binding Path=Beatmap.OnlineBeatmap.Uploaded, Converter={StaticResource DateTimeConverter}}" />

                        <Label Content="Downloads"
                               HorizontalContentAlignment="Right" />
                        <Label Content="{Binding Path=Beatmap.OnlineBeatmap.Stats.Downloads, Converter={StaticResource AddCommasConverter}}" />

                        <Label Content="Plays"
                               HorizontalContentAlignment="Right" />
                        <Label Content="{Binding Path=Beatmap.OnlineBeatmap.Stats.Plays, Converter={StaticResource AddCommasConverter}}" />

                        <Label Content="Up votes"
                               HorizontalContentAlignment="Right" />
                        <Label Content="{Binding Path=Beatmap.OnlineBeatmap.Stats.UpVotes, Converter={StaticResource AddCommasConverter}}" />

                        <Label Content="Down votes"
                               HorizontalContentAlignment="Right" />
                        <Label Content="{Binding Path=Beatmap.OnlineBeatmap.Stats.DownVotes, Converter={StaticResource AddCommasConverter}}" />

                        <Label Content="Rating"
                               HorizontalContentAlignment="Right" />
                        <Label Content="{Binding Path=Beatmap.OnlineBeatmap.Stats.Rating, Converter={StaticResource FloatToPercentageConverter}}" />
                    </st:AutoGrid>
                </Grid>

                <Expander Header="Description"
                          IsExpanded="True"
                          Margin="0,0,0,10">
                    <TextBox Text="{Binding Path=Beatmap.OnlineBeatmap.Description}"
                             TextWrapping="Wrap" />
                </Expander>

                <GroupBox Header="Difficulties">
                    <st:AutoGrid Rows="auto,auto,auto"
                                 Columns="1*">
                        <RadioButton x:Name="radioButtonDifficultyTemplate"
                                     st:StackPanel.Fill="Fill"
                                     HorizontalContentAlignment="Center"
                                     Visibility="Collapsed" />

                        <st:StackPanel x:Name="stackPanelSets"
                                       Orientation="Horizontal" />
                        <st:StackPanel x:Name="stackPanelDifficulties"
                                       Orientation="Horizontal"
                                       Margin="0,0,0,10" />

                        <st:StackPanel Orientation="Horizontal"
                                       MarginBetweenChildren="10">
                            <st:AutoGrid Columns="auto,1*"
                                         Rows="auto,auto,auto,auto"
                                         ChildMargin="2.5,0"
                                         st:StackPanel.Fill="Fill">
                                <Label Content="Bombs"
                                       HorizontalContentAlignment="Right" />
                                <Label Content="{Binding Path=BeatmapDetail.BombsCount, Mode=OneWay, Converter={StaticResource AddCommasConverter}}" />

                                <Label Content="Notes"
                                       HorizontalContentAlignment="Right" />
                                <Label Content="{Binding Path=BeatmapDetail.NotesCount, Mode=OneWay, Converter={StaticResource AddCommasConverter}}" />

                                <Label Content="Obstacles"
                                       HorizontalContentAlignment="Right" />
                                <Label Content="{Binding Path=BeatmapDetail.ObstaclesCount, Mode=OneWay, Converter={StaticResource AddCommasConverter}}" />

                                <Label Content="Events"
                                       HorizontalContentAlignment="Right" />
                                <Label Content="{Binding Path=BeatmapDetail.EventsCount, Mode=OneWay, Converter={StaticResource AddCommasConverter}}" />
                            </st:AutoGrid>
                            <st:AutoGrid Columns="auto,1*"
                                         Rows="auto,auto,auto,auto"
                                         ChildMargin="2.5,0"
                                         st:StackPanel.Fill="Fill">
                                <Label Content="Notes Movement Speed"
                                       HorizontalContentAlignment="Right" />
                                <Label Content="{Binding Path=BeatmapDetail.DifficultyBeatmap.NoteJumpMovementSpeed, Converter={StaticResource AddCommasConverter}}" />

                                <Label Content="Notes Start Offset"
                                       HorizontalContentAlignment="Right" />
                                <Label Content="{Binding Path=BeatmapDetail.DifficultyBeatmap.NoteJumpStartBeatOffset, Converter={StaticResource AddCommasConverter}}" />

                                <Label Content="Half Jump Duration"
                                       HorizontalContentAlignment="Right" />
                                <Label Content="{Binding Path=BeatmapDetail.HalfJumpDuration, Converter={StaticResource AddCommasConverter}}" />

                                <Label Content="Jump Distance"
                                       HorizontalContentAlignment="Right" />
                                <Label Content="{Binding Path=BeatmapDetail.JumpDistance, Converter={StaticResource AddCommasConverter}}" />
                            </st:AutoGrid>
                        </st:StackPanel>
                    </st:AutoGrid>
                </GroupBox>
            </st:AutoGrid>
        </StackPanel>
    </ScrollViewer>
</UserControl>
