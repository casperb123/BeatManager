<UserControl x:Class="BeatManager.UserControls.ModelSaber.ModelSaberLocalDetailsUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:st="http://schemas.spicytaco.io/"
             mc:Ignorable="d"
             d:DesignWidth="800"
             d:DesignHeight="1088">
    <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                  VerticalScrollBarVisibility="Auto">
        <Grid>
            <Grid VerticalAlignment="Top"
                  Height="300"
                  Visibility="{Binding Path=Model.OnlineModel, Converter={StaticResource NullToVisibilityConverter}}">
                <Rectangle Margin="0,-5,0,10">
                    <Rectangle.Fill>
                        <ImageBrush ImageSource="{Binding Path=CoverImage}"
                                    Stretch="UniformToFill" />
                    </Rectangle.Fill>
                    <Rectangle.Effect>
                        <BlurEffect Radius="10" />
                    </Rectangle.Effect>
                </Rectangle>
                <Grid>
                    <Grid.Background>
                        <LinearGradientBrush StartPoint="0,0"
                                             EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStop Color="#00000000" />
                                <GradientStop Color="{DynamicResource MahApps.Colors.ThemeBackground}"
                                              Offset="1" />
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Grid.Background>
                </Grid>
            </Grid>

            <StackPanel Margin="30,5"
                        MaxWidth="1350">
                <StackPanel Orientation="Horizontal"
                            Margin="0,0,0,30">
                    <Button x:Name="buttonBack"
                            Width="35"
                            Height="35"
                            Margin="0,5,0,0"
                            ToolTip="Back"
                            Style="{DynamicResource TransparentCircleButton}"
                            Click="ButtonBack_Click">
                        <icons:PackIconMaterial Kind="ArrowLeft"
                                                Width="18"
                                                Height="18" />
                    </Button>

                    <Label FontSize="45"
                           Margin="10,0,0,0">
                        <Label.Content>
                            <TextBlock Text="{Binding Path=Model.ModelType, FallbackValue='Model Information', StringFormat='{}{0} Details'}" />
                        </Label.Content>
                    </Label>

                    <Button x:Name="buttonInvalid"
                            BorderThickness="0"
                            Width="35"
                            Height="35"
                            Margin="10,10,0,0"
                            Style="{DynamicResource TransparentCircleButton}"
                            Visibility="{Binding Path=Model.Errors, Converter={StaticResource NullToVisibilityConverter}}"
                            Click="ButtonInvalid_Click">
                        <Button.Background>
                            <SolidColorBrush Color="Red"
                                             Opacity=".2" />
                        </Button.Background>
                        <Button.ToolTip>
                            <TextBlock Text="{Binding Path=Model.ModelType, StringFormat='{}{0} invalid'}" />
                        </Button.ToolTip>
                        <icons:PackIconMaterial Kind="ExclamationThick"
                                                Width="18"
                                                Height="18"
                                                Foreground="Red" />
                    </Button>
                </StackPanel>

                <st:AutoGrid x:Name="gridMain"
                             Columns="1*"
                             Rows="auto,auto,auto">
                    <Grid Margin="0,0,0,30">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>

                        <Grid Width="200"
                              Height="200"
                              Margin="0,0,25,0"
                              Visibility="{Binding Path=Model.OnlineModel, Converter={StaticResource NullToVisibilityConverter}}">
                            <Image x:Name="imageCover"
                                   Source="{Binding Path=CoverImage}" />
                            <Button x:Name="buttonBigCover"
                                    Style="{DynamicResource CustomButtonCover}"
                                    Click="ButtonBigCover_Click">
                                <icons:PackIconMaterial Kind="ArrowExpandAll"
                                                        Width="25"
                                                        Height="25" />
                            </Button>
                            <Grid HorizontalAlignment="Right"
                                  VerticalAlignment="Top"
                                  Margin="0,-15,-15,0">
                                <Border Width="30"
                                        Height="30"
                                        Background="#2ec92e"
                                        CornerRadius="100"
                                        ToolTip="Approved"
                                        ToolTipService.BetweenShowDelay="0"
                                        ToolTipService.InitialShowDelay="0"
                                        Visibility="{Binding Path=Model.OnlineModel.StatusBool, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Grid>
                                        <icons:PackIconMaterial Kind="Check"
                                                                Width="15"
                                                                Height="15"
                                                                HorizontalAlignment="Center"
                                                                VerticalAlignment="Center" />
                                        <Border Style="{DynamicResource BorderDetails}"
                                                CornerRadius="15" />
                                    </Grid>
                                </Border>
                                <Border Width="30"
                                        Height="30"
                                        Background="#ff4040"
                                        CornerRadius="100"
                                        ToolTip="Not Approved"
                                        ToolTipService.BetweenShowDelay="0"
                                        ToolTipService.InitialShowDelay="0"
                                        Visibility="{Binding Path=Model.OnlineModel.StatusBool, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                                    <Grid>
                                        <icons:PackIconMaterial Kind="Close"
                                                                Width="15"
                                                                Height="15"
                                                                HorizontalAlignment="Center"
                                                                VerticalAlignment="Center" />
                                        <Border Style="{DynamicResource BorderDetails}"
                                                CornerRadius="15" />
                                    </Grid>
                                </Border>
                            </Grid>
                        </Grid>
                        <st:AutoGrid Rows="auto,auto"
                                     Columns="1*"
                                     VerticalAlignment="Center"
                                     Grid.Column="1">
                            <TextBlock TextWrapping="WrapWithOverflow">
                                    <Run FontSize="35">
                                        <Run.Style>
                                            <Style TargetType="Run">
                                                <Setter Property="Text"
                                                        Value="{Binding Path=Model.OnlineModel.Name, IsAsync=True}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=Model.OnlineModel.Name}"
                                                                 Value="{x:Null}">
                                                        <Setter Property="Text"
                                                                Value="{Binding Path=Model.Name, IsAsync=True}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Run.Style>
                                    </Run>
                                    <Run Text=" " />
                                    <Run Text="{Binding Path=Model.OnlineModel.Author}"
                                         FontSize="25">
                                        <Run.Foreground>
                                            <SolidColorBrush Color="{DynamicResource MahApps.Colors.ThemeForeground}"
                                                             Opacity=".5" />
                                        </Run.Foreground>   
                                    </Run>
                            </TextBlock>

                            <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                                          VerticalScrollBarVisibility="Auto"
                                          MaxHeight="103"
                                          Margin="-2.5,10,0,0"
                                          Visibility="{Binding Path=Model.OnlineModel, Converter={StaticResource NullToVisibilityConverter}}">
                                <WrapPanel x:Name="wrapPanelTags"
                                           Orientation="Horizontal" />
                            </ScrollViewer>
                        </st:AutoGrid>
                    </Grid>
                </st:AutoGrid>

                <st:StackPanel Orientation="Horizontal"
                               Margin="0,0,0,20"
                               MarginBetweenChildren="2">
                    <Button x:Name="buttonDelete"
                            Width="35"
                            Height="35"
                            Foreground="#ff4040"
                            Style="{DynamicResource TransparentCircleButton}"
                            Click="ButtonDelete_Click">
                        <Button.ToolTip>
                            <TextBlock Text="{Binding Path=Model.ModelType, StringFormat='{}Delete {0}'}" />
                        </Button.ToolTip>
                        <icons:PackIconMaterial Kind="DeleteForever"
                                                Width="18"
                                                Height="18" />
                    </Button>
                    <Button x:Name="buttonRefreshData"
                            Width="35"
                            Height="35"
                            ToolTip="Refresh the data"
                            Style="{DynamicResource TransparentCircleButton}"
                            Click="ButtonRefreshData_Click">
                        <icons:PackIconMaterial Kind="Refresh"
                                                Width="18"
                                                Height="18" />
                    </Button>
                    <Button x:Name="buttonOpenFolder"
                            Width="35"
                            Height="35"
                            ToolTip="Open folder"
                            Style="{DynamicResource TransparentCircleButton}"
                            Click="ButtonOpenFolder_Click">
                        <icons:PackIconMaterial Kind="Folder"
                                                Width="18"
                                                Height="18" />
                    </Button>
                    <Button x:Name="buttonOpenModelSaber"
                            Width="35"
                            Height="35"
                            ToolTip="Open ModelSaber"
                            Style="{DynamicResource TransparentCircleButton}"
                            Visibility="{Binding Path=Model.OnlineModel, Converter={StaticResource NullToVisibilityConverter}}"
                            Click="ButtonOpenModelSaber_Click">
                        <icons:PackIconMaterial Kind="Link"
                                                Width="18"
                                                Height="18" />
                    </Button>
                </st:StackPanel>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>

                    <st:AutoGrid Columns="auto,1*"
                                 Rows="auto,auto,auto,auto,auto,auto,auto,auto"
                                 ChildMargin="2.5,0"
                                 Margin="0,0,2.5,0">
                        <Label Content="Name"
                               HorizontalContentAlignment="Right"
                               Style="{DynamicResource LabelDetails}" />
                        <TextBox>
                            <TextBox.Style>
                                <Style TargetType="TextBox"
                                       BasedOn="{StaticResource TextBoxDetails}">
                                    <Setter Property="Text"
                                            Value="{Binding Path=Model.OnlineModel.Name, IsAsync=True}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Model.OnlineModel.Name}"
                                                     Value="{x:Null}">
                                            <Setter Property="Text"
                                                    Value="{Binding Path=Model.Name, IsAsync=True}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>

                        <Label Content="Author"
                               HorizontalContentAlignment="Right"
                               Style="{DynamicResource LabelDetails}" />
                        <TextBox Text="{Binding Path=Model.OnlineModel.Author, FallbackValue='-', TargetNullValue='-'}"
                                 Style="{DynamicResource TextBoxDetails}" />

                        <Label Content="BeastSaber"
                               HorizontalContentAlignment="Right"
                               Style="{DynamicResource LabelDetails}" />
                        <Label Style="{DynamicResource LabelDetails}">
                            <TextBlock>
                                <Hyperlink x:Name="HyperlinkBsaber"
                                           IsEnabled="{Binding Path=Model.OnlineModel.BsaberLink, Converter={StaticResource NullToBooleanConverter}}"
                                           NavigateUri="{Binding Path=Model.OnlineModel.BsaberLink, FallbackValue='', TargetNullValue=''}"
                                           RequestNavigate="HyperlinkBsaber_RequestNavigate">
                                    <TextBlock Text="{Binding Path=Model.OnlineModel.Bsaber, FallbackValue='-', TargetNullValue='-'}" />
                                </Hyperlink>
                            </TextBlock>
                        </Label>

                        <Label Content="Discord Id"
                               HorizontalContentAlignment="Right"
                               Style="{DynamicResource LabelDetails}" />
                        <TextBox Text="{Binding Path=Model.OnlineModel.Discordid, FallbackValue='-', TargetNullValue='-'}"
                                 Style="{DynamicResource TextBoxDetails}" />
                    </st:AutoGrid>

                    <st:AutoGrid Columns="auto,1*"
                                 Rows="auto,auto,auto,auto"
                                 ChildMargin="2.5,0"
                                 Grid.Column="1"
                                 Margin="2.5,0,0,0">
                        <Label Content="Status"
                               HorizontalContentAlignment="Right"
                               Style="{DynamicResource LabelDetails}" />
                        <Label Style="{DynamicResource LabelDetails}">
                            <Label.Content>
                                <TextBlock Text="{Binding Path=Model.OnlineModel.Status, FallbackValue='-', TargetNullValue='-', Converter={StaticResource StringTitleCaseConverter}}" />
                            </Label.Content>
                        </Label>

                        <Label Content="Id"
                               HorizontalContentAlignment="Right"
                               Style="{DynamicResource LabelDetails}" />
                        <TextBox Text="{Binding Path=Model.OnlineModel.Id, FallbackValue='-', TargetNullValue='-'}"
                                 Style="{DynamicResource TextBoxDetails}" />

                        <Label Content="Hash"
                               HorizontalContentAlignment="Right"
                               Style="{DynamicResource LabelDetails}" />
                        <TextBox Text="{Binding Path=Model.OnlineModel.Hash, FallbackValue='-', TargetNullValue='-'}"
                                 Style="{DynamicResource TextBoxDetails}" />

                        <Label Content="Date"
                               HorizontalContentAlignment="Right"
                               Style="{DynamicResource LabelDetails}" />
                        <Label Style="{DynamicResource LabelDetails}">
                            <Label.Content>
                                <TextBlock Text="{Binding Path=Model.OnlineModel.Date, FallbackValue='-', TargetNullValue='-'}" />
                            </Label.Content>
                        </Label>
                    </st:AutoGrid>
                </Grid>
            </StackPanel>
        </Grid>
    </ScrollViewer>
</UserControl>
